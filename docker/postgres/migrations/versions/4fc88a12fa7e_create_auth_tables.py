"""create_auth_tables

Revision ID: 4fc88a12fa7e
Revises: 327508fc1101
Create Date: 2025-03-11 05:18:24.450417

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "4fc88a12fa7e"
down_revision = "327508fc1101"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_devices",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("device_id", sa.String(length=255), nullable=False),
        sa.Column("client_info", sa.String(length=255), nullable=False),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "device_id", name="uq_user_device"),
    )
    op.create_index(op.f("ix_auth_devices_id"), "auth_devices", ["id"], unique=False)
    op.create_table(
        "auth_tokens",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("access_token", sa.String(), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_auth_tokens_expires_at", "auth_tokens", ["expires_at"], unique=False
    )
    op.create_index(op.f("ix_auth_tokens_id"), "auth_tokens", ["id"], unique=False)
    op.create_table(
        "auth_verifications",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("code", sa.String(length=6), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "EMAIL_SIGNUP",
                "EMAIL_LOGIN",
                "EMAIL_RECOVERY",
                "SMS_SIGNUP",
                "SMS_LOGIN",
                "SMS_RECOVERY",
                "MFA_TOTP",
                "MFA_BACKUP",
                name="verificationtypeenum",
            ),
            nullable=False,
        ),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("verified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("attempts", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_auth_verifications_expires",
        "auth_verifications",
        ["expires_at"],
        unique=False,
    )
    op.create_index(
        "idx_auth_verifications_user_type",
        "auth_verifications",
        ["user_id", "type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auth_verifications_id"), "auth_verifications", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_auth_verifications_id"), table_name="auth_verifications")
    op.drop_index("idx_auth_verifications_user_type", table_name="auth_verifications")
    op.drop_index("idx_auth_verifications_expires", table_name="auth_verifications")
    op.drop_table("auth_verifications")
    op.drop_index(op.f("ix_auth_tokens_id"), table_name="auth_tokens")
    op.drop_index("idx_auth_tokens_expires_at", table_name="auth_tokens")
    op.drop_table("auth_tokens")
    op.drop_index(op.f("ix_auth_devices_id"), table_name="auth_devices")
    op.drop_table("auth_devices")
    # ### end Alembic commands ###
