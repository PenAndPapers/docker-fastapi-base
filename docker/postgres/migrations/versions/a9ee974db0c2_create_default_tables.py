"""create_default_tables

Revision ID: a9ee974db0c2
Revises: 
Create Date: 2025-03-30 08:50:10.039144

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9ee974db0c2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='TodoSeverityEnum'), server_default='LOW', nullable=False),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'DONE', 'CANCELLED', name='TodoStatusEnum'), server_default='TODO', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=False)
    op.create_table('auth_devices',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('client_info', sa.String(length=255), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'device_id', name='uq_user_device')
    )
    op.create_index(op.f('ix_auth_devices_id'), 'auth_devices', ['id'], unique=False)
    op.create_table('auth_tokens',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auth_tokens_expires_at', 'auth_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_auth_tokens_id'), 'auth_tokens', ['id'], unique=False)
    op.create_table('auth_verifications',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.Column('type', sa.Enum('EMAIL_SIGNUP', 'EMAIL_LOGIN', 'EMAIL_RECOVERY', 'SMS_SIGNUP', 'SMS_LOGIN', 'SMS_RECOVERY', 'MFA_TOTP', 'MFA_BACKUP', 'OTP_LOGIN', name='verificationtypeenum'), nullable=False),
    sa.Column('attempts', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('attempts <= 3', name='check_max_attempts'),
    sa.ForeignKeyConstraint(['device_id'], ['auth_devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token_id'], ['auth_tokens.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auth_verifications_device', 'auth_verifications', ['device_id'], unique=False)
    op.create_index('idx_auth_verifications_expires', 'auth_verifications', ['expires_at'], unique=False)
    op.create_index('idx_auth_verifications_token', 'auth_verifications', ['token_id'], unique=False)
    op.create_index('idx_auth_verifications_user_type', 'auth_verifications', ['user_id', 'type'], unique=False)
    op.create_index(op.f('ix_auth_verifications_id'), 'auth_verifications', ['id'], unique=False)
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('date_of_birth', sa.String(), nullable=True))
    op.add_column('users', sa.Column('address', sa.String(), nullable=True))
    op.add_column('users', sa.Column('role', sa.String(), server_default='user', nullable=True))
    op.add_column('users', sa.Column('status', sa.String(), server_default='offline', nullable=True))
    op.add_column('users', sa.Column('uuid', sa.String(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False))
    op.add_column('users', sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_unique_constraint(None, 'users', ['uuid'])
    op.drop_column('users', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'verified_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'uuid')
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    op.drop_column('users', 'address')
    op.drop_column('users', 'date_of_birth')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'password')
    op.drop_index(op.f('ix_auth_verifications_id'), table_name='auth_verifications')
    op.drop_index('idx_auth_verifications_user_type', table_name='auth_verifications')
    op.drop_index('idx_auth_verifications_token', table_name='auth_verifications')
    op.drop_index('idx_auth_verifications_expires', table_name='auth_verifications')
    op.drop_index('idx_auth_verifications_device', table_name='auth_verifications')
    op.drop_table('auth_verifications')
    op.drop_index(op.f('ix_auth_tokens_id'), table_name='auth_tokens')
    op.drop_index('idx_auth_tokens_expires_at', table_name='auth_tokens')
    op.drop_table('auth_tokens')
    op.drop_index(op.f('ix_auth_devices_id'), table_name='auth_devices')
    op.drop_table('auth_devices')
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.drop_table('todos')
    # ### end Alembic commands ### 